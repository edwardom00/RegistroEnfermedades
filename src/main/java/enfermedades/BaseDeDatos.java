/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package enfermedades;

import Conexion.Conexion;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Image;
import java.sql.*;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfPTable;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Edward
 */

public class BaseDeDatos extends javax.swing.JFrame {

    Conexion conexion = Conexion.getInstance();
    JFreeChart grafico=null;
    DefaultCategoryDataset datos = new DefaultCategoryDataset();
    /**
     * Creates new form Tabla
     */
    public BaseDeDatos() {
        initComponents();
        this.setLocationRelativeTo(null);
        setResizable(false);
        this.setTitle("Base de datos");
        /*setSize(1463,584);*/
        
        /*MostrarBarras();*/
        /*botonAtras.setIcon(setIcono("/images/imgBotonAtras2.png",botonAtras));
        botonCargarDatos.setIcon(setIcono("/images/imgBotonCargar.png",botonCargarDatos));
        botonGraficar.setIcon(setIcono("/images/imgTabla2.png",botonGraficar));*/
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotonCargarCSV = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEnfermedades = new javax.swing.JTable();
        botonCargarDatos = new javax.swing.JButton();
        botonGraficar = new javax.swing.JButton();
        botonAtras = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        botonExportarPDF = new javax.swing.JButton();
        LabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BotonCargarCSV.setBackground(new java.awt.Color(0, 102, 102));
        BotonCargarCSV.setFont(new java.awt.Font("Forte", 0, 18)); // NOI18N
        BotonCargarCSV.setForeground(new java.awt.Color(255, 255, 255));
        BotonCargarCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imgBotonCargarCSV.png"))); // NOI18N
        BotonCargarCSV.setText("CSV");
        BotonCargarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCargarCSVActionPerformed(evt);
            }
        });
        getContentPane().add(BotonCargarCSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 520, 160, 60));

        tablaEnfermedades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Año", "Casos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaEnfermedades);
        if (tablaEnfermedades.getColumnModel().getColumnCount() > 0) {
            tablaEnfermedades.getColumnModel().getColumn(0).setPreferredWidth(90);
            tablaEnfermedades.getColumnModel().getColumn(1).setPreferredWidth(90);
            tablaEnfermedades.getColumnModel().getColumn(2).setPreferredWidth(90);
            tablaEnfermedades.getColumnModel().getColumn(3).setPreferredWidth(90);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 320, 440));

        botonCargarDatos.setBackground(new java.awt.Color(0, 102, 102));
        botonCargarDatos.setFont(new java.awt.Font("Forte", 0, 18)); // NOI18N
        botonCargarDatos.setForeground(new java.awt.Color(255, 255, 255));
        botonCargarDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imgBotonCargar.png"))); // NOI18N
        botonCargarDatos.setText("Cargar");
        botonCargarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarDatosActionPerformed(evt);
            }
        });
        getContentPane().add(botonCargarDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, 150, 60));

        botonGraficar.setBackground(new java.awt.Color(0, 102, 102));
        botonGraficar.setFont(new java.awt.Font("Forte", 0, 18)); // NOI18N
        botonGraficar.setForeground(new java.awt.Color(255, 255, 255));
        botonGraficar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imgBotonGraficar.png"))); // NOI18N
        botonGraficar.setText("Graficar");
        botonGraficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGraficarActionPerformed(evt);
            }
        });
        getContentPane().add(botonGraficar, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 590, 160, 60));

        botonAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imgBotonAtras.png"))); // NOI18N
        botonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasActionPerformed(evt);
            }
        });
        getContentPane().add(botonAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        jLabel1.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Base de datos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, -1, 30));

        botonExportarPDF.setBackground(new java.awt.Color(0, 102, 102));
        botonExportarPDF.setFont(new java.awt.Font("Forte", 0, 14)); // NOI18N
        botonExportarPDF.setForeground(new java.awt.Color(255, 255, 255));
        botonExportarPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imgBotonExportarPDF.png"))); // NOI18N
        botonExportarPDF.setText("Exportar");
        botonExportarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonExportarPDFActionPerformed(evt);
            }
        });
        getContentPane().add(botonExportarPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 590, 150, 60));

        LabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fondo1.jpg"))); // NOI18N
        getContentPane().add(LabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 360, 660));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCargarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarDatosActionPerformed
        try{
            DefaultTableModel modelo=new DefaultTableModel();
            tablaEnfermedades.setModel(modelo);
            Connection conexionMysql = conexion.conectar();
            PreparedStatement seleccion = conexionMysql.prepareStatement("select * from enfermedades");
            ResultSet consulta =seleccion.executeQuery();
            ResultSetMetaData datos = consulta.getMetaData();
            int cantidadColumnas = datos.getColumnCount();
            modelo.addColumn("n");
            modelo.addColumn("Nombre");
            modelo.addColumn("Año");
            modelo.addColumn("Casos");
            int anchos[]={30,90,90,90};
            for(int i=0; i<cantidadColumnas;i++){
                tablaEnfermedades.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }
            while(consulta.next()){
                Object arreglo[]= new Object[cantidadColumnas];
                for(int i=0; i<cantidadColumnas;i++){
                    arreglo[i]=consulta.getObject(i+1);
                }
                modelo.addRow(arreglo);
                }
            
            
        }catch(Exception error){
            System.out.println(error);
        }
    }//GEN-LAST:event_botonCargarDatosActionPerformed

    private void botonGraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGraficarActionPerformed
        datos.clear();
        try{
            for(int i=0;i<tablaEnfermedades.getRowCount(); i++){
              datos.addValue(Integer.parseInt(tablaEnfermedades.getValueAt(i, 3).toString()), tablaEnfermedades.getValueAt(i, 1).toString(), tablaEnfermedades.getValueAt(i, 2).toString());
            }
        

            JFreeChart grafico=null;
            grafico=ChartFactory.createBarChart("Grafico de enfermedades", "Nombres", "Numero de casos", datos, PlotOrientation.VERTICAL, true, true, false);
            ChartPanel panel =new ChartPanel(grafico);  
            panel.setBounds(0, 0, 1000, 1000);
            JFrame barras = new JFrame("BARRAS");
            barras.getContentPane().add(panel);
            barras.setLocationRelativeTo(null);
            barras.pack();
            barras.setVisible(true);

            grafico.setBackgroundPaint(Color.lightGray);//Dar color al fondo del panel
            grafico.getTitle().setPaint(Color.black);//Dar color al titulo 

            //CategoryPlot plot =(CategoryPlot) chart.getPlot();	    	    	    
            CategoryPlot plot = grafico.getCategoryPlot();
            plot.setBackgroundPaint(Color.WHITE);//Color del fondo del gr�fico

            plot.setDomainGridlinesVisible(true);//Lineas divisorias
            plot.setRangeGridlinePaint(Color.BLACK);//Color de lineas divisorias	    

            BarRenderer renderer = (BarRenderer) plot.getRenderer();
            renderer.setDrawBarOutline(true);//Asignar color de linea a las barras

            //Dar color a las barras
            GradientPaint gp = new GradientPaint(0.0f, 0.0f, Color.cyan, 0.0f, 0.0f, Color.BLUE);
            renderer.setSeriesPaint(0, gp);


        }catch(NumberFormatException e){
            System.out.println(e);
        }
    }//GEN-LAST:event_botonGraficarActionPerformed


    private void botonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasActionPerformed
        this.setVisible(false);
        Menu me = new Menu();
        me.setVisible(true);
    }//GEN-LAST:event_botonAtrasActionPerformed

    private void botonExportarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonExportarPDFActionPerformed
        Document documento = new Document();
        try{
            
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta +"/Desktop/ReporteEstadisticaEnfermedades.pdf"));
            documento.open();
            Paragraph titulo = new Paragraph();
            titulo.setAlignment(1);
            titulo.add("Reporte de epidemias en el Perú\n\n");
            Paragraph parrafo = new Paragraph();
            parrafo.add("Se muestra la base de datos de las epidemias "
                    + "que han afectado al pais en los ultimos años con sus respectivos codigos, nombres, y "
                    + "numero de casos de acuerdo al año que se indica.\n\n");
            documento.add(titulo);
            documento.add(parrafo);
            PdfPTable tabla = new PdfPTable(4);
            tabla.addCell("Codigo");
            tabla.addCell("Nombre");
            tabla.addCell("Año");
            tabla.addCell("Casos");
            
            try{
                Connection conectar = conexion.conectar();
                PreparedStatement seleccionar = conectar.prepareStatement("select * from enfermedades");
                ResultSet consultar = seleccionar.executeQuery();
                if(consultar.next()){
                    do{
                        tabla.addCell(consultar.getString(1));
                        tabla.addCell(consultar.getString(2));
                        tabla.addCell(consultar.getString(3));
                        tabla.addCell(consultar.getString(4));
                    }while(consultar.next());
                    documento.add(tabla);
                }
            }catch(DocumentException | SQLException e){
                System.out.println("e");
            }
                       
            documento.close();
            conexion.cerrarConexion();
            JOptionPane.showMessageDialog(null, "Reporte creado con exito");
        } catch (DocumentException | FileNotFoundException e) {
            System.out.println("Error:" + e);
        } catch (SQLException ex) {
            Logger.getLogger(BaseDeDatos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonExportarPDFActionPerformed

    
 
    
    private void BotonCargarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCargarCSVActionPerformed
       try {
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos csv", "csv");
        JFileChooser fileChooserCargar = new JFileChooser();
        fileChooserCargar.setFileFilter(filtro);
        fileChooserCargar.setDialogTitle("Abrir");

        int seleccion = fileChooserCargar.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File data = fileChooserCargar.getSelectedFile();
            
            BufferedReader br = new BufferedReader(new FileReader(data));
            String primerlinea = br.readLine().trim();
            String[] datosfila = primerlinea.split(",");
            DefaultTableModel modelo= (DefaultTableModel)tablaEnfermedades.getModel();
            modelo.setColumnIdentifiers(datosfila);
            Object[] lineatabla = br.lines().toArray();
                   
            for(int i = 0; i < lineatabla.length; i++){
                String linea = lineatabla[i].toString().trim();
                String[] dataRow = linea.split(",");
                modelo.addRow(dataRow);
            }
        } 
        }catch (HeadlessException | IOException ex) {
            Logger.getLogger(BaseDeDatos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotonCargarCSVActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaseDeDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaseDeDatos().setVisible(true);
            }
        });
    }
    
    public Icon setIcono(String url, JButton boton){
        ImageIcon icon = new ImageIcon(getClass().getResource(url));
        int ancho=boton.getWidth();
        int alto=boton.getHeight();
        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(ancho, alto,Image.SCALE_DEFAULT ));
        return icono;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonCargarCSV;
    private javax.swing.JLabel LabelFondo;
    private javax.swing.JButton botonAtras;
    private javax.swing.JButton botonCargarDatos;
    private javax.swing.JButton botonExportarPDF;
    private javax.swing.JButton botonGraficar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaEnfermedades;
    // End of variables declaration//GEN-END:variables
}
